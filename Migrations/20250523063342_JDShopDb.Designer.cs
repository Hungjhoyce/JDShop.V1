// <auto-generated />
using System;
using JDshop.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JDShop.Migrations
{
    [DbContext(typeof(JDshopDbContext))]
    [Migration("20250523063342_JDShopDb")]
    partial class JDShopDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JDshop.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Avartar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Point")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.HasIndex("RoleId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountTypeId = 3,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@jdshop.com",
                            FullName = "Admin JDShop",
                            Gender = (byte)1,
                            Password = "hunghoang123",
                            Phone = "0123456789",
                            RoleId = 1,
                            Status = (byte)1,
                            UserName = "jdshop.admin"
                        },
                        new
                        {
                            Id = 2,
                            AccountTypeId = 1,
                            Birthday = new DateTime(1995, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khachang1@gmail.com",
                            FullName = "Khách Hàng 1",
                            Gender = (byte)2,
                            Password = "hunghoang123",
                            Phone = "0987654321",
                            Point = 100,
                            RoleId = 2,
                            Status = (byte)1,
                            UserName = "customer1"
                        });
                });

            modelBuilder.Entity("JDshop.Models.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bạc"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Vàng"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kim Cương"
                        });
                });

            modelBuilder.Entity("JDshop.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ward")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Address", (string)null);
                });

            modelBuilder.Entity("JDshop.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Cdt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CDT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cdt = new DateTime(2025, 5, 23, 13, 33, 42, 83, DateTimeKind.Local).AddTicks(1384),
                            Description = "Các loại áo dành cho nữ",
                            Name = "Áo nữ",
                            Status = true,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 2,
                            Cdt = new DateTime(2025, 5, 23, 13, 33, 42, 83, DateTimeKind.Local).AddTicks(1388),
                            Description = "Các loại áo dành cho nam",
                            Name = "Áo nam",
                            Status = true,
                            SupplierId = 1
                        });
                });

            modelBuilder.Entity("JDshop.Models.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Baner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Collection", (string)null);
                });

            modelBuilder.Entity("JDshop.Models.CollectionProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Cdt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("datetime2")
                        .HasColumnName("CDT")
                        .HasDefaultValueSql("(getdate())")
                        .IsFixedLength();

                    b.Property<int?>("CollectionId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.HasIndex("ProductId");

                    b.ToTable("CollectionProduct", (string)null);
                });

            modelBuilder.Entity("JDshop.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Color");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color1 = "Đen"
                        },
                        new
                        {
                            Id = 2,
                            Color1 = "Trắng"
                        },
                        new
                        {
                            Id = 3,
                            Color1 = "Xanh"
                        });
                });

            modelBuilder.Entity("JDshop.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Discount_percent");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UseNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("JDshop.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("JDshop.Models.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CDT")
                        .HasColumnType("datetime2");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("JDshop.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDay")
                        .HasColumnType("datetime");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("DiscountId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("JDshop.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductSizeColorId")
                        .HasColumnType("int")
                        .HasColumnName("ProductSize_ColorId");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductSizeColorId");

                    b.HasIndex("ProductSizeColorId");

                    b.ToTable("Order_Items", (string)null);
                });

            modelBuilder.Entity("JDshop.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("OrdersId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("PaymentMethodsId")
                        .HasColumnType("int");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("OrdersId");

                    b.HasIndex("PaymentMethodsId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("JDshop.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Thanh toán bằng tiền mặt khi nhận hàng",
                            Name = "Tiền mặt"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Thanh toán bằng chuyển khoản ngân hàng",
                            Name = "Chuyển khoản"
                        });
                });

            modelBuilder.Entity("JDshop.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Áo thun nữ form rộng basic",
                            Name = "Áo thun nữ basic",
                            Price = 199000.0,
                            ProductTypeId = 1,
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Áo sơ mi nam dài tay",
                            Name = "Áo sơ mi nam công sở",
                            Price = 299000.0,
                            ProductTypeId = 2,
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("JDshop.Models.ProductSizeColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductInventoryId")
                        .HasColumnType("int")
                        .HasColumnName("Product_InventoryId");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductInventoryId");

                    b.HasIndex("SizeId");

                    b.ToTable("ProductSize_Colors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "PSC001",
                            ColorId = 1,
                            ProductId = 1,
                            ProductInventoryId = 1,
                            SizeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "PSC002",
                            ColorId = 2,
                            ProductId = 1,
                            ProductInventoryId = 2,
                            SizeId = 2
                        });
                });

            modelBuilder.Entity("JDshop.Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Cdt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CDT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Cdt = new DateTime(2025, 5, 23, 13, 33, 42, 83, DateTimeKind.Local).AddTicks(1412),
                            Description = "Áo thun dành cho nữ",
                            Name = "Áo thun nữ",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Cdt = new DateTime(2025, 5, 23, 13, 33, 42, 83, DateTimeKind.Local).AddTicks(1414),
                            Description = "Áo sơ mi dành cho nam",
                            Name = "Áo sơ mi nam",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("JDshop.Models.ProductsInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("QuantitySold")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Product_Inventory");

                    b.ToTable("Products_Inventorys", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Quantity = 100,
                            QuantitySold = 0
                        },
                        new
                        {
                            Id = 2,
                            Quantity = 150,
                            QuantitySold = 0
                        });
                });

            modelBuilder.Entity("JDshop.Models.ReceiptProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateDay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("ProductSizeColorId")
                        .HasColumnType("int")
                        .HasColumnName("ProductSize_ColorId");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("ProductSizeColorId");

                    b.ToTable("Receipt_Products", (string)null);
                });

            modelBuilder.Entity("JDshop.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Nhân Viên"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Khách Hàng"
                        });
                });

            modelBuilder.Entity("JDshop.Models.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Size1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Size");

                    b.HasKey("Id");

                    b.ToTable("Size", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Size1 = "S"
                        },
                        new
                        {
                            Id = 2,
                            Size1 = "M"
                        },
                        new
                        {
                            Id = 3,
                            Size1 = "L"
                        },
                        new
                        {
                            Id = 4,
                            Size1 = "XL"
                        });
                });

            modelBuilder.Entity("JDshop.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Cdt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CDT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Ha Noi",
                            Cdt = new DateTime(2025, 5, 23, 13, 33, 42, 83, DateTimeKind.Local).AddTicks(1336),
                            Email = "supplier@jdshop.com",
                            Name = "JDShop Supplier",
                            Phone = "0123456789",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Quang Ninh",
                            Cdt = new DateTime(2025, 5, 23, 13, 33, 42, 83, DateTimeKind.Local).AddTicks(1353),
                            Email = "fashion@supplier.com",
                            Name = "Fashion Supplier",
                            Phone = "0987654321",
                            Status = true
                        });
                });

            modelBuilder.Entity("JDshop.Models.Account", b =>
                {
                    b.HasOne("JDshop.Models.AccountType", "AccountType")
                        .WithMany("Accounts")
                        .HasForeignKey("AccountTypeId")
                        .HasConstraintName("FK_Account_AccountType");

                    b.HasOne("JDshop.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Account_Role");

                    b.Navigation("AccountType");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("JDshop.Models.Address", b =>
                {
                    b.HasOne("JDshop.Models.Account", "Account")
                        .WithMany("Addresses")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Address_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("JDshop.Models.Category", b =>
                {
                    b.HasOne("JDshop.Models.Supplier", "Supplier")
                        .WithMany("Categories")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_Category_Suppliers");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("JDshop.Models.CollectionProduct", b =>
                {
                    b.HasOne("JDshop.Models.Collection", "Collection")
                        .WithMany("CollectionProducts")
                        .HasForeignKey("CollectionId")
                        .HasConstraintName("FK_CollectionProduct_Collection");

                    b.HasOne("JDshop.Models.Product", "Product")
                        .WithMany("CollectionProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_CollectionProduct_Products");

                    b.Navigation("Collection");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("JDshop.Models.Image", b =>
                {
                    b.HasOne("JDshop.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Images_Products");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("JDshop.Models.Order", b =>
                {
                    b.HasOne("JDshop.Models.Account", "Account")
                        .WithMany("Oders")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Oders_Account");

                    b.HasOne("JDshop.Models.Discount", "Discount")
                        .WithMany("Oders")
                        .HasForeignKey("DiscountId")
                        .HasConstraintName("FK_Oders_Discount");

                    b.Navigation("Account");

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("JDshop.Models.OrderItem", b =>
                {
                    b.HasOne("JDshop.Models.Order", "Oder")
                        .WithMany("OderItems")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_Oder_Items_Oders");

                    b.HasOne("JDshop.Models.ProductSizeColor", "ProductSizeColor")
                        .WithMany("OderItems")
                        .HasForeignKey("ProductSizeColorId")
                        .IsRequired()
                        .HasConstraintName("FK_Oder_Items_ProductSize_Colors");

                    b.Navigation("Oder");

                    b.Navigation("ProductSizeColor");
                });

            modelBuilder.Entity("JDshop.Models.Payment", b =>
                {
                    b.HasOne("JDshop.Models.Order", "Oders")
                        .WithMany("Payments")
                        .HasForeignKey("OrdersId")
                        .HasConstraintName("FK_Payments_Oders");

                    b.HasOne("JDshop.Models.PaymentMethod", "PaymentMethods")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentMethodsId")
                        .HasConstraintName("FK_Payments_PaymentMethods");

                    b.Navigation("Oders");

                    b.Navigation("PaymentMethods");
                });

            modelBuilder.Entity("JDshop.Models.Product", b =>
                {
                    b.HasOne("JDshop.Models.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .HasConstraintName("FK_Products_ProductTypes");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("JDshop.Models.ProductSizeColor", b =>
                {
                    b.HasOne("JDshop.Models.Color", "Color")
                        .WithMany("ProductSizeColors")
                        .HasForeignKey("ColorId")
                        .HasConstraintName("FK_ProductSize_Colors_Colors");

                    b.HasOne("JDshop.Models.Product", "Product")
                        .WithMany("ProductSizeColors")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductSize_Colors_Products");

                    b.HasOne("JDshop.Models.ProductsInventory", "ProductInventory")
                        .WithMany("ProductSizeColors")
                        .HasForeignKey("ProductInventoryId")
                        .HasConstraintName("FK_ProductSize_Colors_Products_Inventorys");

                    b.HasOne("JDshop.Models.Size", "Size")
                        .WithMany("ProductSizeColors")
                        .HasForeignKey("SizeId")
                        .HasConstraintName("FK_ProductSize_Colors_Size");

                    b.Navigation("Color");

                    b.Navigation("Product");

                    b.Navigation("ProductInventory");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("JDshop.Models.ProductType", b =>
                {
                    b.HasOne("JDshop.Models.Category", "Category")
                        .WithMany("ProductTypes")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_ProductTypes_Category");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("JDshop.Models.ReceiptProduct", b =>
                {
                    b.HasOne("JDshop.Models.ProductSizeColor", "ProductSizeColor")
                        .WithMany("ReceiptProducts")
                        .HasForeignKey("ProductSizeColorId")
                        .HasConstraintName("FK_Receipt_Products_ProductSize_Colors");

                    b.Navigation("ProductSizeColor");
                });

            modelBuilder.Entity("JDshop.Models.Account", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Oders");
                });

            modelBuilder.Entity("JDshop.Models.AccountType", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("JDshop.Models.Category", b =>
                {
                    b.Navigation("ProductTypes");
                });

            modelBuilder.Entity("JDshop.Models.Collection", b =>
                {
                    b.Navigation("CollectionProducts");
                });

            modelBuilder.Entity("JDshop.Models.Color", b =>
                {
                    b.Navigation("ProductSizeColors");
                });

            modelBuilder.Entity("JDshop.Models.Discount", b =>
                {
                    b.Navigation("Oders");
                });

            modelBuilder.Entity("JDshop.Models.Order", b =>
                {
                    b.Navigation("OderItems");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("JDshop.Models.PaymentMethod", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("JDshop.Models.Product", b =>
                {
                    b.Navigation("CollectionProducts");

                    b.Navigation("Images");

                    b.Navigation("ProductSizeColors");
                });

            modelBuilder.Entity("JDshop.Models.ProductSizeColor", b =>
                {
                    b.Navigation("OderItems");

                    b.Navigation("ReceiptProducts");
                });

            modelBuilder.Entity("JDshop.Models.ProductType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("JDshop.Models.ProductsInventory", b =>
                {
                    b.Navigation("ProductSizeColors");
                });

            modelBuilder.Entity("JDshop.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("JDshop.Models.Size", b =>
                {
                    b.Navigation("ProductSizeColors");
                });

            modelBuilder.Entity("JDshop.Models.Supplier", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
