@* @model IEnumerable<JDshop.Models.ProductType>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<div class="page-header">
    <h3 style="font-family:Helvetica;" class="page-title"> Sản phẩm theo loại </h3>
    <nav aria-label="breadcrumb">

    </nav>
</div>

<div class="col-lg-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <p>
                <a asp-action="Create" class="btn btn-success mb-2">Thêm</a>
            </p>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Tên sản phẩm
                        </th>
                        <th>
                            Mô tả
                        </th>
                        <th>
                            Trạng thái
                        </th>
                        <th>
                            Ngày tạo
                        </th>
                        <th>
                            Loại sản phẩm
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            @if (item.Status == 1)
                            {
                                <td>
                                    Còn hoạt động
                                </td>
                            }
                            else
                            {
                                <td>
                                    Ngừng hoạt động
                                </td>
                            }

                            <td>
                                @(item.Cdt.HasValue
                                    ? item.Cdt.Value.ToString("dd/MM/yyyy", new System.Globalization.CultureInfo("vi-VN"))
                                    : "")
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Category.Name)
                            </td>
                            <td>
                                <a asp-action="Details" asp-route-id="@item.Id" class="action-icon"> <i class="mdi mdi-eye" style="color:#19b6ff;font-size:25px;"></i>  </a>
                                <a asp-action="Edit" asp-route-id="@item.Id" class="action-icon"> <i class="mdi mdi-square-edit-outline" style="color:#ffd83b;font-size:25px;"></i></a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="action-icon"> <i class="mdi mdi-delete" style="color:#e75555;font-size:25px;"></i></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div> *@






@model IEnumerable<JDshop.Models.ProductType>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
.content-wrapper {
    padding: 32px;
    background-color: #f8fafc;
    min-height: calc(100vh - 64px);
}

.page-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 32px;
}

.header-content h1 {
    font-size: 32px;
    font-weight: 700;
    color: #111827;
    margin: 0 0 8px 0;
}

.header-content p {
    color: #6b7280;
    font-size: 16px;
    margin: 0;
}

.header-actions {
    display: flex;
    align-items: center;
    gap: 16px;
}

.filter-select {
    padding: 8px 16px;
    border: 1px solid #d1d5db;
    border-radius: 6px;
    font-size: 14px;
    background-color: white;
    color: #374151;
    min-width: 180px;
}

.add-button {
    background-color: #3b82f6;
    color: white;
    padding: 12px 24px;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 500;
    font-size: 14px;
    display: inline-flex;
    align-items: center;
    gap: 8px;
    transition: all 0.2s ease;
    border: none;
}

.add-button:hover {
    background-color: #2563eb;
    color: white;
    text-decoration: none;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.4);
}

.categories-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 24px;
}

.category-section {
    background: white;
    border-radius: 12px;
    border: 1px solid #e5e7eb;
    overflow: hidden;
    transition: all 0.2s ease;
}

.category-section:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    border-color: #d1d5db;
}

.category-header {
    padding: 20px 24px;
    border-bottom: 1px solid #f3f4f6;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.category-info h3 {
    font-size: 18px;
    font-weight: 600;
    color: #111827;
    margin: 0 0 4px 0;
}

.category-info p {
    font-size: 14px;
    color: #6b7280;
    margin: 0;
}

.product-count {
    background-color: #f3f4f6;
    color: #374151;
    padding: 4px 12px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 500;
}

.products-list {
    padding: 16px 24px 24px;
}

.product-card {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 16px;
    border: 1px solid #f3f4f6;
    border-radius: 8px;
    margin-bottom: 12px;
    transition: all 0.2s ease;
}

.product-card:last-child {
    margin-bottom: 0;
}

.product-card:hover {
    border-color: #d1d5db;
    background-color: #f9fafb;
}

.product-info h4 {
    font-size: 16px;
    font-weight: 500;
    color: #111827;
    margin: 0 0 4px 0;
}

.product-description {
    font-size: 14px;
    color: #6b7280;
    margin: 0 0 8px 0;
    line-height: 1.4;
}

.product-meta {
    display: flex;
    align-items: center;
    gap: 12px;
    font-size: 12px;
    color: #9ca3af;
}

.status-badge {
    padding: 4px 8px;
    border-radius: 6px;
    font-size: 11px;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.status-active {
    background-color: #dcfce7;
    color: #166534;
}

.status-inactive {
    background-color: #fee2e2;
    color: #dc2626;
}

.product-actions {
    display: flex;
    align-items: center;
    gap: 8px;
    flex-shrink: 0;
}

.action-btn {
    width: 36px;
    height: 36px;
    border-radius: 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    transition: all 0.2s ease;
    border: 1px solid #e5e7eb;
    background: white;
}

.action-btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    text-decoration: none;
}

.action-btn.view {
    color: #3b82f6;
}

.action-btn.view:hover {
    background-color: #eff6ff;
    border-color: #3b82f6;
    color: #3b82f6;
}

.action-btn.edit {
    color: #f59e0b;
}

.action-btn.edit:hover {
    background-color: #fffbeb;
    border-color: #f59e0b;
    color: #f59e0b;
}

.action-btn.delete {
    color: #ef4444;
}

.action-btn.delete:hover {
    background-color: #fef2f2;
    border-color: #ef4444;
    color: #ef4444;
}

.empty-category {
    text-align: center;
    padding: 32px 16px;
    color: #9ca3af;
}

.empty-category svg {
    width: 48px;
    height: 48px;
    margin: 0 auto 12px;
    color: #d1d5db;
}

.empty-state {
    text-align: center;
    padding: 64px 32px;
    background: white;
    border-radius: 12px;
    border: 1px solid #e5e7eb;
}

.empty-state-icon {
    width: 64px;
    height: 64px;
    margin: 0 auto 16px;
    background-color: #f3f4f6;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.empty-state h3 {
    font-size: 18px;
    font-weight: 600;
    color: #111827;
    margin: 0 0 8px 0;
}

.empty-state p {
    color: #6b7280;
    margin: 0 0 24px 0;
}


</style>

<div class="content-wrapper">
    <div class="page-header">
        <div class="header-content">
            <h1>Sản phẩm theo loại</h1>
            <p>Xem sản phẩm được phân loại theo danh mục</p>
        </div>
        <div class="header-actions">
            <select class="filter-select" id="categoryFilter">
                <option value="">Tất cả danh mục</option>
                @if (Model != null && Model.Any())
                {
                    @foreach (var category in Model.GroupBy(p => p.Category?.Name).Select(g => g.Key).Distinct())
                    {
                        <option value="@category">@category</option>
                    }
                }
            </select>
            <a asp-action="Create" class="add-button">
                <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                </svg>
                Thêm sản phẩm
            </a>
        </div>
    </div>

    @if (Model != null && Model.Any())
    {
        <div class="categories-grid">
            @foreach (var categoryGroup in Model.GroupBy(p => p.Category))
            {
                <div class="category-section" data-category="@categoryGroup.Key?.Name">
                    <div class="category-header">
                        <div class="category-info">
                            <h3>@(categoryGroup.Key?.Name ?? "Chưa phân loại")</h3>
                            <p>@(categoryGroup.Key?.Description ?? "Sản phẩm chưa được phân loại")</p>
                        </div>
                        <span class="product-count">@categoryGroup.Count() sản phẩm</span>
                    </div>
                    
                    <div class="products-list">
                        @if (categoryGroup.Any())
                        {
                            @foreach (var item in categoryGroup)
                            {
                                <div class="product-card">
                                    <div class="product-info">
                                        <h4>@Html.DisplayFor(modelItem => item.Name)</h4>
                                        <p class="product-description">@Html.DisplayFor(modelItem => item.Description)</p>
                                        <div class="product-meta">
                                            <span class="status-badge @(item.Status == 1 ? "status-active" : "status-inactive")">
                                                @(item.Status == 1 ? "Còn hàng" : "Hết hàng")
                                            </span>
                                            <span>•</span>
                                            <span>
                                                @(item.Cdt.HasValue
                                                    ? item.Cdt.Value.ToString("dd/MM/yyyy", new System.Globalization.CultureInfo("vi-VN"))
                                                    : "Chưa có ngày tạo")
                                            </span>
                                        </div>
                                    </div>
                                    
                                    <div class="product-actions">
                                        <a asp-action="Details" asp-route-id="@item.Id" class="action-btn view" title="Xem chi tiết">
                                            <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                                            </svg>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="action-btn edit" title="Chỉnh sửa">
                                            <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                            </svg>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="action-btn delete" title="Xóa">
                                            <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                            </svg>
                                        </a>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="empty-category">
                                <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4"></path>
                                </svg>
                                <p>Chưa có sản phẩm nào trong danh mục này</p>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="empty-state">
            <div class="empty-state-icon">
                <svg width="32" height="32" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4"></path>
                </svg>
            </div>
            <h3>Chưa có sản phẩm nào</h3>
            <p>Bắt đầu bằng cách thêm sản phẩm đầu tiên của bạn</p>
            <a asp-action="Create" class="add-button">
                <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                </svg>
                Thêm sản phẩm
            </a>
        </div>
    }
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const categoryFilter = document.getElementById('categoryFilter');
    const categorySections = document.querySelectorAll('.category-section');
    
    categoryFilter.addEventListener('change', function() {
        const selectedCategory = this.value;
        
        categorySections.forEach(section => {
            const categoryName = section.getAttribute('data-category');
            
            if (selectedCategory === '' || categoryName === selectedCategory) {
                section.style.display = 'block';
            } else {
                section.style.display = 'none';
            }
        });
    });
});
</script>