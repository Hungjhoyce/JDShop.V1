

@using System.Globalization
@model JDshop.Models.Product

@{
    ViewData["Title"] = "Chỉnh sửa sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    .page-header {
        background: white;
        padding: 1.5rem;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        margin-bottom: 2rem;
    }

    .page-title {
        margin: 0;
        color: #2c3e50;
        font-size: 1.75rem;
        font-weight: 600;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    }

    .breadcrumb-nav {
        background: none;
        padding: 0;
        margin: 0.5rem 0 0 0;
        font-size: 0.875rem;
    }

        .breadcrumb-nav .breadcrumb-item a {
            color: #3498db;
            text-decoration: none;
        }

        .breadcrumb-nav .breadcrumb-item.active {
            color: #7f8c8d;
        }

    .form-container {
        display: grid;
        grid-template-columns: 1fr 400px;
        gap: 2rem;
    }

    .form-section {
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        padding: 1.5rem;
    }

    .section-title {
        color: #2c3e50;
        font-size: 1.25rem;
        font-weight: 600;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        border-bottom: 2px solid #ecf0f1;
        padding-bottom: 1rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 600;
        color: #2c3e50;
        font-size: 0.875rem;
    }

    .form-control {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #ddd;
        border-radius: 6px;
        font-size: 0.875rem;
        transition: all 0.3s;
        background-color: #fff;
    }

        .form-control:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
        }

        .form-control.is-invalid {
            border-color: #e74c3c;
        }

    .text-danger {
        color: #e74c3c;
        font-size: 0.75rem;
        margin-top: 0.25rem;
        display: block;
    }

    .textarea-control {
        min-height: 100px;
        resize: vertical;
    }

    .price-input-group {
        position: relative;
    }

        .price-input-group::before {
            content: "₫";
            position: absolute;
            left: 0.75rem;
            top: 50%;
            transform: translateY(-50%);
            color: #7f8c8d;
            font-weight: 600;
            z-index: 2;
        }

        .price-input-group .form-control {
            padding-left: 2rem;
        }

    .status-select {
        position: relative;
    }

        .status-select select {
            appearance: none;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 0.5rem center;
            background-repeat: no-repeat;
            background-size: 1.5em 1.5em;
            padding-right: 2.5rem;
        }

    /* Image Upload Section */
    .image-upload-section {
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        padding: 1.5rem;
    }

    .current-images {
        margin-bottom: 1.5rem;
    }

    .current-images-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
        gap: 1rem;
        margin-top: 1rem;
    }

    .current-image-item {
        position: relative;
        border-radius: 8px;
        overflow: hidden;
        border: 2px solid #ecf0f1;
        transition: all 0.3s;
    }

        .current-image-item:hover {
            border-color: #3498db;
            transform: scale(1.02);
        }

    .current-image {
        width: 100%;
        height: 120px;
        object-fit: cover;
        display: block;
    }

    .image-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s;
    }

    .current-image-item:hover .image-overlay {
        opacity: 1;
    }

    .remove-image-btn {
        background: #e74c3c;
        color: white;
        border: none;
        border-radius: 50%;
        width: 30px;
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s;
    }

        .remove-image-btn:hover {
            background: #c0392b;
            transform: scale(1.1);
        }

    .upload-area {
        border: 2px dashed #ddd;
        border-radius: 8px;
        padding: 2rem;
        text-align: center;
        transition: all 0.3s;
        cursor: pointer;
        background: #f8f9fa;
    }

        .upload-area:hover,
        .upload-area.dragover {
            border-color: #3498db;
            background: #e3f2fd;
        }

    .upload-icon {
        font-size: 2rem;
        color: #7f8c8d;
        margin-bottom: 1rem;
    }

    .upload-text {
        color: #7f8c8d;
        margin-bottom: 0.5rem;
    }

    .upload-hint {
        font-size: 0.75rem;
        color: #95a5a6;
    }

    .file-input {
        display: none;
    }

    .preview-images {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
        gap: 1rem;
        margin-top: 1rem;
    }

    .preview-image-item {
        position: relative;
        border-radius: 8px;
        overflow: hidden;
        border: 2px solid #27ae60;
    }

    .preview-image {
        width: 100%;
        height: 120px;
        object-fit: cover;
        display: block;
    }

    .preview-overlay {
        position: absolute;
        top: 0.5rem;
        right: 0.5rem;
    }

    .remove-preview-btn {
        background: rgba(231, 76, 60, 0.9);
        color: white;
        border: none;
        border-radius: 50%;
        width: 24px;
        height: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        font-size: 0.75rem;
    }

    /* Action Buttons */
    .action-buttons {
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        padding: 1.5rem;
        margin-top: 2rem;
        display: flex;
        gap: 1rem;
        justify-content: flex-start;
    }

    .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 6px;
        font-weight: 500;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s;
        border: none;
        cursor: pointer;
        font-size: 0.875rem;
    }

    .btn-primary {
        background-color: #3498db;
        color: white;
    }

        .btn-primary:hover {
            background-color: #2980b9;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(52, 152, 219, 0.3);
        }

    .btn-secondary {
        background-color: #95a5a6;
        color: white;
    }

        .btn-secondary:hover {
            background-color: #7f8c8d;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(149, 165, 166, 0.3);
        }

    .validation-summary {
        background: #f8d7da;
        border: 1px solid #f5c6cb;
        border-radius: 6px;
        padding: 1rem;
        margin-bottom: 1.5rem;
        color: #721c24;
    }

        .validation-summary ul {
            margin: 0;
            padding-left: 1.5rem;
        }

   
</style>

<div class="page-header">
    <h1 class="page-title">
        <i class="fas fa-edit me-2"></i>
        Chỉnh sửa sản phẩm
    </h1>
</div>

<form asp-action="Edit" method="post" enctype="multipart/form-data" id="editForm">
    <div asp-validation-summary="ModelOnly" class="validation-summary"></div>
    <input type="hidden" asp-for="Id" />

    <div class="form-container">
        <!-- Main Form Section -->
        <div class="form-section">
            <h3 class="section-title">
                <i class="fas fa-info-circle"></i>
                Thông tin sản phẩm
            </h3>

            <div class="form-group">
                <label asp-for="Name" class="form-label">
                    <i class="fas fa-tag me-1"></i>
                    Tên sản phẩm *
                </label>
                <input asp-for="Name" class="form-control" placeholder="Nhập tên sản phẩm..." />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="form-label">
                    <i class="fas fa-align-left me-1"></i>
                    Mô tả sản phẩm
                </label>
                <textarea asp-for="Description" class="form-control textarea-control"
                          placeholder="Nhập mô tả chi tiết về sản phẩm..."></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Price" class="form-label">
                    <i class="fas fa-dollar-sign me-1"></i>
                    Đơn giá *
                </label>
                <div class="price-input-group">
                    <input asp-for="Price" class="form-control"
                           placeholder="0" />
                </div>
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="form-label">
                    <i class="fas fa-toggle-on me-1"></i>
                    Trạng thái *
                </label>
                <div class="status-select">
                    <select class="form-control" asp-for="Status" required>
                        <option value="1">Đang hoạt động</option>
                        <option value="0">Ngừng hoạt động</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="ProductTypeId" class="form-label">
                    <i class="fas fa-layer-group me-1"></i>
                    Loại sản phẩm *
                </label>
                <div class="status-select">
                    <select asp-for="ProductTypeId" class="form-control" asp-items="ViewBag.ProductTypeId">
                        <option value="">-- Chọn loại sản phẩm --</option>
                    </select>
                </div>
                <span asp-validation-for="ProductTypeId" class="text-danger"></span>
            </div>
        </div>

        <!-- Image Upload Section -->
        <div class="image-upload-section">
            <h3 class="section-title">
                <i class="fas fa-images"></i>
                Hình ảnh sản phẩm
            </h3>

            <!-- Current Images -->
            @if (Model.Images?.Any() == true)
            {
                <div class="current-images">
                    <label class="form-label">Hình ảnh hiện tại</label>
                    <div class="current-images-grid">
                        @foreach (var item in Model.Images)
                        {
                            <div class="current-image-item">
                                <img src="@Url.Content("~/contents/Images/Product/" + item.Url)"
                                     class="current-image"
                                     alt="Current Image">
                                <div class="image-overlay">
                                    <button type="button" class="remove-image-btn"
                                            onclick="removeCurrentImage(this, '@item.Id')">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- Upload New Images -->
            <div class="form-group">
                <label class="form-label">Thêm hình ảnh mới</label>
                <div class="upload-area" onclick="document.getElementById('imageUpload').click()">
                    <div class="upload-icon">
                        <i class="fas fa-cloud-upload-alt"></i>
                    </div>
                    <div class="upload-text">Nhấp để chọn hình ảnh</div>
                    <div class="upload-hint">hoặc kéo thả file vào đây</div>
                    <div class="upload-hint">Hỗ trợ: JPG, PNG, GIF (tối đa 5MB mỗi file)</div>
                </div>
                <input type="file" name="images" id="imageUpload" class="file-input"
                       onchange="previewFiles(event)" multiple accept="image/*" />
            </div>

            <!-- Preview New Images -->
            <div id="previewImages" class="preview-images"></div>
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="action-buttons">
        <button type="submit" class="btn btn-primary">
            <i class="fas fa-save"></i>
            Lưu thay đổi
        </button>
        <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">
            <i class="fas fa-eye"></i>
            Xem chi tiết
        </a>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i>
            Quay lại danh sách
        </a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        let selectedFiles = [];
        let removedImageIds = [];

        // Preview uploaded files
        const previewFiles = (event) => {
            const files = Array.from(event.target.files);
            const previewContainer = document.getElementById("previewImages");

            // Validate files
            const validFiles = files.filter(file => {
                if (file.size > 5 * 1024 * 1024) {
                    alert(`File ${file.name} quá lớn. Vui lòng chọn file nhỏ hơn 5MB.`);
                    return false;
                }
                if (!file.type.startsWith('image/')) {
                    alert(`File ${file.name} không phải là hình ảnh.`);
                    return false;
                }
                return true;
            });

            selectedFiles = validFiles;
            previewContainer.innerHTML = "";

            validFiles.forEach((file, index) => {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const imageItem = document.createElement("div");
                    imageItem.className = "preview-image-item";
                    imageItem.innerHTML = `
                        <img src="${e.target.result}" class="preview-image" alt="Preview">
                        <div class="preview-overlay">
                            <button type="button" class="remove-preview-btn" onclick="removePreviewImage(${index})">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    `;
                    previewContainer.appendChild(imageItem);
                };
                reader.readAsDataURL(file);
            });
        };

        // Remove preview image
        const removePreviewImage = (index) => {
            selectedFiles.splice(index, 1);
            updateFileInput();
            previewFiles({ target: { files: selectedFiles } });
        };

        // Remove current image
        const removeCurrentImage = (button, imageId) => {
            if (confirm('Bạn có chắc chắn muốn xóa hình ảnh này?')) {
                removedImageIds.push(imageId);
                button.closest('.current-image-item').remove();

                // Add hidden input to track removed images
                const hiddenInput = document.createElement('input');
                hiddenInput.type = 'hidden';
                hiddenInput.name = 'removedImageIds';
                hiddenInput.value = imageId;
                document.getElementById('editForm').appendChild(hiddenInput);
            }
        };

        // Update file input with selected files
        const updateFileInput = () => {
            const dt = new DataTransfer();
            selectedFiles.forEach(file => dt.items.add(file));
            document.getElementById('imageUpload').files = dt.files;
        };

        // Drag and drop functionality
        const uploadArea = document.querySelector('.upload-area');

        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            uploadArea.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        ['dragenter', 'dragover'].forEach(eventName => {
            uploadArea.addEventListener(eventName, highlight, false);
        });

        ['dragleave', 'drop'].forEach(eventName => {
            uploadArea.addEventListener(eventName, unhighlight, false);
        });

        function highlight(e) {
            uploadArea.classList.add('dragover');
        }

        function unhighlight(e) {
            uploadArea.classList.remove('dragover');
        }

        uploadArea.addEventListener('drop', handleDrop, false);

        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;
            document.getElementById('imageUpload').files = files;
            previewFiles({ target: { files: files } });
        }

        // Form validation
        document.getElementById('editForm').addEventListener('submit', function(e) {
            const name = document.querySelector('input[name="Name"]').value.trim();
            const price = document.querySelector('input[name="Price"]').value;
            const productTypeId = document.querySelector('select[name="ProductTypeId"]').value;

            if (!name) {
                alert('Vui lòng nhập tên sản phẩm.');
                e.preventDefault();
                return;
            }

            if (!price || price <= 0) {
                alert('Vui lòng nhập đơn giá hợp lệ.');
                e.preventDefault();
                return;
            }

            if (!productTypeId) {
                alert('Vui lòng chọn loại sản phẩm.');
                e.preventDefault();
                return;
            }
        });

        // Format price input
        const priceInput = document.querySelector('input[name="Price"]');
        priceInput.addEventListener('input', function(e) {
            let value = e.target.value.replace(/[^\d]/g, '');
            if (value) {
                e.target.value = parseInt(value).toLocaleString('vi-VN');
            }
        });

        priceInput.addEventListener('blur', function(e) {
            let value = e.target.value.replace(/[^\d]/g, '');
            e.target.value = value;
        });
    </script>
}