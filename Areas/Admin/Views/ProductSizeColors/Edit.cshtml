


@model JDshop.Models.ProductSizeColor

@{
    ViewData["Title"] = "Chỉnh sửa biến thể sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    .edit-container {
        margin: 0 auto;
        padding: 2rem;
    }

    .page-header {
        margin-bottom: 2rem;
    }

    .page-title {
        font-size: 1.75rem;
        font-weight: 600;
        color: #1f2937;
        margin: 0;
    }

    .page-subtitle {
        color: #6b7280;
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }

    .form-container {
        display: grid;
        grid-template-columns: 1fr 300px;
        gap: 2rem;
    }

    .form-section {
        background: white;
        border: 1px solid #e5e7eb;
        border-radius: 8px;
        padding: 1.5rem;
    }

    .form-header {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1.5rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #f3f4f6;
    }

    .form-icon {
        width: 48px;
        height: 48px;
        background: #8b5cf6;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.5rem;
    }

    .form-info {
        flex: 1;
    }

    .form-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: #1f2937;
        margin: 0;
    }

    .form-description {
        color: #6b7280;
        font-size: 0.875rem;
        margin: 0.25rem 0 0 0;
    }

    .validation-summary {
        background: #fef2f2;
        border: 1px solid #fecaca;
        border-radius: 6px;
        padding: 1rem;
        margin-bottom: 1.5rem;
        color: #dc2626;
        font-size: 0.875rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
        color: #374151;
        font-size: 0.875rem;
    }

        .form-label.required::after {
            content: " *";
            color: #dc2626;
        }

    .form-control {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #d1d5db;
        border-radius: 6px;
        font-size: 0.875rem;
        transition: all 0.2s;
        background-color: #fff;
    }

        .form-control:focus {
            outline: none;
            border-color: #8b5cf6;
            box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.1);
        }

        .form-control.is-invalid {
            border-color: #dc2626;
        }

    .text-danger {
        color: #dc2626;
        font-size: 0.75rem;
        margin-top: 0.25rem;
        display: block;
    }

    .form-select {
        appearance: none;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
        background-position: right 0.5rem center;
        background-repeat: no-repeat;
        background-size: 1.5em 1.5em;
        padding-right: 2.5rem;
    }

    .input-group {
        position: relative;
    }

    .input-icon {
        position: absolute;
        left: 0.75rem;
        top: 50%;
        transform: translateY(-50%);
        color: #6b7280;
        font-size: 0.875rem;
        pointer-events: none;
    }

    .input-with-icon {
        padding-left: 2.5rem;
    }

    .help-text {
        font-size: 0.75rem;
        color: #6b7280;
        margin-top: 0.25rem;
    }

    /* Preview Section */
    .preview-section {
        background: white;
        border: 1px solid #e5e7eb;
        border-radius: 8px;
        padding: 1.5rem;
    }

    .preview-header {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-bottom: 1rem;
        color: #1f2937;
        font-weight: 600;
    }

    .current-values {
        background: #f8f9fa;
        border-radius: 6px;
        padding: 1rem;
        margin-bottom: 1rem;
    }

    .current-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.5rem 0;
        border-bottom: 1px solid #e5e7eb;
    }

        .current-item:last-child {
            border-bottom: none;
        }

    .current-label {
        font-size: 0.75rem;
        color: #6b7280;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .current-value {
        font-weight: 500;
        color: #1f2937;
        font-size: 0.875rem;
    }

    .color-preview {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .color-swatch {
        width: 16px;
        height: 16px;
        border-radius: 50%;
        border: 2px solid #e5e7eb;
    }

    .size-badge {
        background: #fff3e0;
        color: #f57c00;
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        font-size: 0.75rem;
        font-weight: 500;
    }

    .code-badge {
        background: #e3f2fd;
        color: #1976d2;
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        font-size: 0.75rem;
        font-weight: 500;
        font-family: monospace;
    }

    .inventory-summary {
        background: #f0fdf4;
        border: 1px solid #bbf7d0;
        border-radius: 6px;
        padding: 1rem;
        margin-top: 1rem;
    }

    .inventory-item {
        display: flex;
        justify-content: space-between;
        margin-bottom: 0.5rem;
    }

        .inventory-item:last-child {
            margin-bottom: 0;
            font-weight: 600;
            border-top: 1px solid #bbf7d0;
            padding-top: 0.5rem;
        }

    .action-buttons {
        display: flex;
        justify-content: flex-end;
        gap: 0.75rem;
        margin-top: 2rem;
        padding-top: 1.5rem;
        border-top: 1px solid #f3f4f6;
    }

    .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 6px;
        font-size: 0.875rem;
        font-weight: 500;
        border: 1px solid;
        cursor: pointer;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.2s;
    }

    .btn-primary {
        background: #8b5cf6;
        color: white;
        border-color: #8b5cf6;
    }

        .btn-primary:hover {
            background: #7c3aed;
            border-color: #7c3aed;
        }

    .btn-secondary {
        background: white;
        color: #374151 !important;
        border-color: #d1d5db;
    }

        .btn-secondary:hover {
            background: #f9fafb;
            border-color: #9ca3af;
        }

    
</style>

<div class="edit-container">
    <div class="page-header">
        <h1 class="page-title">Chỉnh sửa biến thể sản phẩm</h1>
        <p class="page-subtitle">Cập nhật thông tin màu sắc, kích thước và tồn kho</p>
    </div>

    <form asp-action="Edit" id="editForm">
        <div asp-validation-summary="ModelOnly" class="validation-summary"></div>
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="ProductInventoryId" />

        <div class="form-container">
            <!-- Main Form Section -->
            <div class="form-section">
                <div class="form-header">
                    <div class="form-icon">
                        <i class="fas fa-palette"></i>
                    </div>
                    <div class="form-info">
                        <h2 class="form-title">Thông tin biến thể</h2>
                        <p class="form-description">Chỉnh sửa thông tin chi tiết</p>
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="ProductId" class="form-label required">
                        <i class="fas fa-box me-1"></i>
                        Sản phẩm
                    </label>
                    <select asp-for="ProductId" class="form-control form-select" asp-items="ViewBag.ProductId">
                        <option value="">-- Chọn sản phẩm --</option>
                    </select>
                    <span asp-validation-for="ProductId" class="text-danger"></span>
                    <div class="help-text">Chọn sản phẩm chính cho biến thể này</div>
                </div>

                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem;">
                    <div class="form-group">
                        <label asp-for="ColorId" class="form-label required">
                            <i class="fas fa-palette me-1"></i>
                            Màu sắc
                        </label>
                        <select asp-for="ColorId" class="form-control form-select" asp-items="ViewBag.ColorId">
                            <option value="">-- Chọn màu --</option>
                        </select>
                        <span asp-validation-for="ColorId" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="SizeId" class="form-label required">
                            <i class="fas fa-expand-arrows-alt me-1"></i>
                            Kích thước
                        </label>
                        <select asp-for="SizeId" class="form-control form-select" asp-items="ViewBag.SizeId">
                            <option value="">-- Chọn size --</option>
                        </select>
                        <span asp-validation-for="SizeId" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="Code" class="form-label">
                        <i class="fas fa-barcode me-1"></i>
                        Mã Code
                    </label>
                    <div class="input-group">
                        <i class="fas fa-barcode input-icon"></i>
                        <input asp-for="Code" class="form-control input-with-icon" placeholder="Nhập mã code..." />
                    </div>
                    <span asp-validation-for="Code" class="text-danger"></span>
                    <div class="help-text">Mã định danh duy nhất cho biến thể này</div>
                </div>

                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem;">
                    <div class="form-group">
                        <label class="form-label required">
                            <i class="fas fa-warehouse me-1"></i>
                            Số lượng tồn kho
                        </label>
                        <div class="input-group">
                            <i class="fas fa-warehouse input-icon"></i>
                            <input asp-for="ProductInventory.Quantity" class="form-control input-with-icon"
                                   type="number" min="0" placeholder="0" />
                        </div>
                        <span asp-validation-for="ProductInventory.Quantity" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label class="form-label">
                            <i class="fas fa-shopping-cart me-1"></i>
                            Số lượng đã bán
                        </label>
                        <div class="input-group">
                            <i class="fas fa-shopping-cart input-icon"></i>
                            <input asp-for="ProductInventory.QuantitySold" class="form-control input-with-icon"
                                   type="number" min="0" placeholder="0" />
                        </div>
                        <span asp-validation-for="ProductInventory.QuantitySold" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <!-- Preview Section -->
            <div class="preview-section">
                <div class="preview-header">
                    <i class="fas fa-eye"></i>
                    Thông tin hiện tại
                </div>

                <div class="current-values">
                    <div class="current-item">
                        <span class="current-label">Sản phẩm</span>
                        <span class="current-value">@(Model.Product?.Name ?? "Chưa chọn")</span>
                    </div>
                    <div class="current-item">
                        <span class="current-label">Màu sắc</span>
                        <span class="current-value">
                            @if (!string.IsNullOrEmpty(Model.Color?.Color1))
                            {
                                <div class="color-preview">
                                    <div class="color-swatch" style="background-color: @GetColorHex(Model.Color.Color1);"></div>
                                    @Model.Color.Color1
                                </div>
                            }
                            else
                            {
                                <span>Chưa chọn</span>
                            }
                        </span>
                    </div>
                    <div class="current-item">
                        <span class="current-label">Kích thước</span>
                        <span class="current-value">
                            @if (!string.IsNullOrEmpty(Model.Size?.Size1))
                            {
                                <span class="size-badge">@Model.Size.Size1</span>
                            }
                            else
                            {
                                <span>Chưa chọn</span>
                            }
                        </span>
                    </div>
                    <div class="current-item">
                        <span class="current-label">Mã Code</span>
                        <span class="current-value">
                            @if (!string.IsNullOrEmpty(Model.Code))
                            {
                                <span class="code-badge">@Model.Code</span>
                            }
                            else
                            {
                                <span>Chưa có</span>
                            }
                        </span>
                    </div>
                </div>

                <div class="inventory-summary">
                    <div class="inventory-item">
                        <span>Tồn kho:</span>
                        <span>@((Model.ProductInventory?.Quantity ?? 0) - (Model.ProductInventory?.QuantitySold ?? 0))</span>
                    </div>
                    <div class="inventory-item">
                        <span>Đã bán:</span>
                        <span>@(Model.ProductInventory?.QuantitySold ?? 0)</span>
                    </div>
                    <div class="inventory-item">
                        <span>Tổng nhập:</span>
                        <span>@(Model.ProductInventory?.Quantity ?? 0)</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="action-buttons">
            <a asp-action="Index" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i>
                Hủy bỏ
            </a>
            <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">
                <i class="fas fa-eye"></i>
                Xem chi tiết
            </a>
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-save"></i>
                Lưu thay đổi
            </button>
        </div>
    </form>
</div>

@functions {
    string GetColorHex(string colorName)
    {
        var colorMap = new Dictionary<string, string>
        {
            {"đỏ", "#ff0000"}, {"xanh", "#0000ff"}, {"vàng", "#ffff00"},
            {"đen", "#000000"}, {"trắng", "#ffffff"}, {"xám", "#808080"},
            {"hồng", "#ffc0cb"}, {"tím", "#800080"}, {"cam", "#ffa500"},
            {"nâu", "#a52a2a"}, {"xanh lá", "#008000"}
        };

        return colorMap.ContainsKey(colorName.ToLower()) ? colorMap[colorName.ToLower()] : "#cccccc";
    }
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Form validation
        document.getElementById('editForm').addEventListener('submit', function(e) {
            const productId = document.querySelector('select[name="ProductId"]').value;
            const colorId = document.querySelector('select[name="ColorId"]').value;
            const sizeId = document.querySelector('select[name="SizeId"]').value;
            const quantity = document.querySelector('input[name="ProductInventory.Quantity"]').value;

            if (!productId) {
                alert('Vui lòng chọn sản phẩm.');
                e.preventDefault();
                return;
            }

            if (!colorId) {
                alert('Vui lòng chọn màu sắc.');
                e.preventDefault();
                return;
            }

            if (!sizeId) {
                alert('Vui lòng chọn kích thước.');
                e.preventDefault();
                return;
            }

            if (!quantity || quantity < 0) {
                alert('Vui lòng nhập số lượng tồn kho hợp lệ.');
                e.preventDefault();
                return;
            }
        });

        // Auto-generate code based on product, color, size
        function generateCode() {
            const productSelect = document.querySelector('select[name="ProductId"]');
            const colorSelect = document.querySelector('select[name="ColorId"]');
            const sizeSelect = document.querySelector('select[name="SizeId"]');
            const codeInput = document.querySelector('input[name="Code"]');

            if (productSelect.value && colorSelect.value && sizeSelect.value && !codeInput.value) {
                const productText = productSelect.options[productSelect.selectedIndex].text;
                const colorText = colorSelect.options[colorSelect.selectedIndex].text;
                const sizeText = sizeSelect.options[sizeSelect.selectedIndex].text;

                // Generate simple code (you can customize this logic)
                const code = `${productText.substring(0, 3).toUpperCase()}-${colorText.substring(0, 2).toUpperCase()}-${sizeText}`;
                codeInput.value = code;
            }
        }

        // Add event listeners for auto-generation
        document.querySelector('select[name="ProductId"]').addEventListener('change', generateCode);
        document.querySelector('select[name="ColorId"]').addEventListener('change', generateCode);
        document.querySelector('select[name="SizeId"]').addEventListener('change', generateCode);

        // Validate inventory numbers
        const quantityInputs = document.querySelectorAll('input[type="number"]');
        quantityInputs.forEach(input => {
            input.addEventListener('input', function() {
                if (this.value < 0) {
                    this.value = 0;
                }
            });
        });

        // Real-time preview updates (if needed)
        document.addEventListener('DOMContentLoaded', function() {
            // You can add real-time preview updates here
        });
    </script>
}