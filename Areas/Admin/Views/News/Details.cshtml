@* @model JDshop.Models.News *@

@* @{ *@
@*     ViewData["Title"] = "Details"; *@
@*     Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml"; *@
@* } *@

@* <h1>XEM CHI TIẾT</h1> *@

@* <div> *@
@*     <h4>Tin tức</h4> *@
@*     <hr /> *@
@*     <dl class="row"> *@
@*         <dt class = "col-sm-2"> *@
@*             Tên Blog *@
@*         </dt> *@
@*         <dd class = "col-sm-10"> *@
@*             @Html.DisplayFor(model => model.Title) *@
@*         </dd> *@
@*         <dt class = "col-sm-2"> *@
@*             Nội dung *@
@*         </dt> *@
@*         <dd class = "col-sm-10"> *@
@*             @Html.DisplayFor(model => model.Content) *@
@*         </dd> *@
      
@*         <dt class = "col-sm-2"> *@
@*             Trạng thái *@
@*         </dt> *@
@*         @if (Model.Status == true) *@
@*         { *@
@*             <dd class="col-sm-10"> *@
@*                 Còn hoạt động *@
@*             </dd> *@
@*         } *@
@*         else *@
@*         { *@
@*             <dd class="col-sm-10"> *@
@*                 Ngừng hoạt động *@
@*             </dd> *@

@*         } *@
@*     </dl> *@
@* </div> *@
@* <div> *@
@*     <div style="float: left; padding-right:10px"> *@
@*         <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model?.Id">Sửa</a> *@
@*     </div> *@
@*     <a class="btn btn-secondary" asp-action="Index">Quay Lại</a> *@
@* </div> *@









@model JDshop.Models.News

@{
    ViewData["Title"] = "Chi tiết tin tức";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    body {
        background-color: #f5f5f7;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    }

    .main-container {
        background-color: #f5f5f7;
        min-height: 100vh;
        padding: 2rem;
    }

    .header-section {
        margin-bottom: 2rem;
    }

    .header-title {
        font-size: 1.75rem;
        font-weight: 600;
        color: #1d1d1f;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .header-subtitle {
        color: #86868b;
        margin: 0.25rem 0 0 0;
        font-size: 0.95rem;
    }

    .details-container {
        display: grid;
        grid-template-columns: 2fr 1fr;
        gap: 2rem;
    }

    .main-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        border: 1px solid #f0f0f0;
        overflow: hidden;
    }

    .card-header {
        background: #f9f9f9;
        padding: 1.5rem;
        border-bottom: 1px solid #f0f0f0;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .card-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: #1d1d1f;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .status-badge {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.8rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

    .status-active {
        background: #d1f2eb;
        color: #00875a;
    }

    .status-inactive {
        background: #ffebe6;
        color: #de350b;
    }

    .card-body {
        padding: 2rem;
    }

    .news-image {
        width: 100%;
        max-height: 300px;
        object-fit: cover;
        border-radius: 8px;
        margin-bottom: 1.5rem;
        border: 1px solid #f0f0f0;
    }

    .news-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: #1d1d1f;
        margin: 0 0 1rem 0;
        line-height: 1.3;
    }

    .news-content {
        color: #1d1d1f;
        line-height: 1.6;
        font-size: 1rem;
        margin: 0;
    }

    .sidebar-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        border: 1px solid #f0f0f0;
        overflow: hidden;
        height: fit-content;
    }

    .sidebar-header {
        background: #f0f8ff;
        padding: 1.5rem;
        border-bottom: 1px solid #007aff;
    }

    .sidebar-title {
        font-size: 1rem;
        font-weight: 600;
        color: #007aff;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .sidebar-body {
        padding: 1.5rem;
    }

    .info-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
        padding: 0.75rem;
        background: #f9f9f9;
        border-radius: 8px;
    }

    .info-label {
        color: #86868b;
        font-size: 0.8rem;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .info-value {
        font-weight: 600;
        color: #1d1d1f;
        font-size: 0.9rem;
    }

    .actions-container {
        background: white;
        border-radius: 12px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        border: 1px solid #f0f0f0;
        padding: 1.5rem;
        margin-top: 2rem;
    }

    .actions-title {
        font-size: 1rem;
        font-weight: 600;
        color: #1d1d1f;
        margin: 0 0 1rem 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .form-actions {
        display: flex;
        gap: 1rem;
        justify-content: flex-start;
    }

    .btn {
        padding: 0.75rem 2rem;
        border-radius: 8px;
        font-weight: 500;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.2s ease;
        border: none;
        cursor: pointer;
        font-size: 0.95rem;
    }

    .btn-primary {
        background: #007aff;
        color: white;
    }

        .btn-primary:hover {
            background: #0056b3;
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(0,122,255,0.3);
            text-decoration: none;
            color: white;
        }

    .btn-secondary {
        background: #f0f0f0;
        color: #1d1d1f !important;
        border: 1px solid #d2d2d7;
    }

        .btn-secondary:hover {
            background: #e0e0e0;
            text-decoration: none;
            color: #1d1d1f;
        }

    .meta-info {
        background: #f0f8ff;
        border: 1px solid #007aff;
        border-radius: 8px;
        padding: 1rem;
        margin-bottom: 1.5rem;
    }

    .meta-title {
        font-weight: 600;
        color: #007aff;
        margin: 0 0 0.5rem 0;
        font-size: 0.9rem;
    }

    .meta-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 0.5rem;
        font-size: 0.85rem;
    }

    .meta-item {
        display: flex;
        justify-content: space-between;
    }

    .meta-label {
        color: #86868b;
    }

    .meta-value {
        color: #007aff;
        font-weight: 500;
    }

    

    .content-wrapper {
        overflow-y: auto;
        padding-right: 0.5rem;
    }

        .content-wrapper::-webkit-scrollbar {
            width: 6px;
        }

        .content-wrapper::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 3px;
        }

        .content-wrapper::-webkit-scrollbar-thumb {
            background: #c1c1c1;
            border-radius: 3px;
        }

            .content-wrapper::-webkit-scrollbar-thumb:hover {
                background: #a8a8a8;
            }
</style>

<div class="main-container">
    <!-- Header Section -->
    <div class="header-section">
        <nav class="breadcrumb">
            <span class="breadcrumb-item">
                <a asp-action="Index" style="color: #007aff; text-decoration: none;">Tin tức</a>
            </span>
            <span class="breadcrumb-item active">Chi tiết</span>
        </nav>

        <h1 class="header-title">
            <i class="mdi mdi-newspaper"></i>
            Chi tiết tin tức
        </h1>
        <p class="header-subtitle">Xem thông tin chi tiết bài viết</p>
    </div>

    <div class="details-container">
        <!-- Main Content -->
        <div class="main-card">
            <div class="card-header">
                <h2 class="card-title">
                    <i class="mdi mdi-text-box"></i>
                    Nội dung bài viết
                </h2>
                @if (Model.Status == true)
                {
                    <span class="status-badge status-active">
                        <i class="mdi mdi-check-circle"></i>
                        Hoạt động
                    </span>
                }
                else
                {
                    <span class="status-badge status-inactive">
                        <i class="mdi mdi-close-circle"></i>
                        Ngừng hoạt động
                    </span>
                }
            </div>

            <div class="card-body">
                @if (!string.IsNullOrEmpty(Model.Images))
                {
                    <img src="@Url.Content("~/contents/Images/News/" + Model.Images)"
                         class="news-image"
                         alt="@Model.Title"
                         onerror="this.style.display='none'">
                }

                <h1 class="news-title">@Model.Title</h1>

                <div class="content-wrapper">
                    <div class="news-content">
                        @Html.Raw(Model.Content)
                    </div>
                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="sidebar-card">
            <div class="sidebar-header">
                <h3 class="sidebar-title">
                    <i class="mdi mdi-information"></i>
                    Thông tin bài viết
                </h3>
            </div>

            <div class="sidebar-body">
                <div class="meta-info">
                    <h4 class="meta-title">
                        <i class="mdi mdi-chart-box"></i>
                        Thống kê
                    </h4>
                    <div class="meta-grid">
                        <div class="meta-item">
                            <span class="meta-label">Trạng thái:</span>
                            <span class="meta-value">
                                @(Model.Status == true ? "Hoạt động" : "Ngừng hoạt động")
                            </span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Ngày tạo:</span>
                            <span class="meta-value">@DateTime.Now.ToString("dd/MM/yyyy")</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Có hình ảnh:</span>
                            <span class="meta-value">
                                @(string.IsNullOrEmpty(Model.Images) ? "Không" : "Có")
                            </span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Độ dài nội dung:</span>
                            <span class="meta-value">
                                @(Model.Content?.Length ?? 0) ký tự
                            </span>
                        </div>
                    </div>
                </div>

                <div class="info-item">
                    <span class="info-label">
                        <i class="mdi mdi-format-title"></i>
                        Tiêu đề
                    </span>
                    <span class="info-value">@(Model.Title?.Length ?? 0) ký tự</span>
                </div>

                <div class="info-item">
                    <span class="info-label">
                        <i class="mdi mdi-text"></i>
                        Nội dung
                    </span>
                    <span class="info-value">
                        @(string.IsNullOrEmpty(Model.Content) ? "Trống" : "Có nội dung")
                    </span>
                </div>

                <div class="info-item">
                    <span class="info-label">
                        <i class="mdi mdi-image"></i>
                        Hình ảnh
                    </span>
                    <span class="info-value">
                        @(string.IsNullOrEmpty(Model.Images) ? "Không có" : "Có hình ảnh")
                    </span>
                </div>

                <div class="info-item">
                    <span class="info-label">
                        <i class="mdi mdi-eye"></i>
                        Hiển thị
                    </span>
                    <span class="info-value">
                        @(Model.Status == true ? "Công khai" : "Ẩn")
                    </span>
                </div>
            </div>
        <!-- Actions -->
        <div class="actions-container">
            <h3 class="actions-title">
                <i class="mdi mdi-cog"></i>
                Thao tác
            </h3>
            <div class="form-actions">
                <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model?.Id">
                    <i class="mdi mdi-pencil"></i>
                    Chỉnh sửa
                </a>
                <a class="btn btn-secondary" asp-action="Index">
                    <i class="mdi mdi-arrow-left"></i>
                    Quay lại
                </a>
            </div>
        </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Add smooth animations
        var cards = document.querySelectorAll('.main-card, .sidebar-card, .actions-container');
        cards.forEach(function(card, index) {
            card.style.opacity = '0';
            card.style.transform = 'translateY(20px)';

            setTimeout(function() {
                card.style.transition = 'all 0.6s ease';
                card.style.opacity = '1';
                card.style.transform = 'translateY(0)';
            }, index * 100);
        });

        // Handle image error
        var newsImage = document.querySelector('.news-image');
        if (newsImage) {
            newsImage.addEventListener('error', function() {
                this.style.display = 'none';
            });
        }

        // Add reading time estimation
        var content = document.querySelector('.news-content');
        if (content) {
            var wordCount = content.textContent.split(' ').length;
            var readingTime = Math.ceil(wordCount / 200); // Average reading speed

            var readingTimeElement = document.createElement('div');
            readingTimeElement.className = 'info-item';
            readingTimeElement.innerHTML = `
                <span class="info-label">
                    <i class="mdi mdi-clock"></i>
                    Thời gian đọc
                </span>
                <span class="info-value">${readingTime} phút</span>
            `;

            var sidebar = document.querySelector('.sidebar-body');
            if (sidebar) {
                sidebar.appendChild(readingTimeElement);
            }
        }
    });
</script>