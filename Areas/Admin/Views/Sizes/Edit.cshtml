@* @model JDshop.Models.Size *@

@* @{ *@
@*     ViewData["Title"] = "Edit"; *@
@*     Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml"; *@
@* } *@

@* <h1>CHỈNH SỬA</h1> *@

@* <h4>Size</h4> *@
@* <hr /> *@
@* <div class="row"> *@
@*     <div class="col-md-4"> *@
@*         <form asp-action="Edit"> *@
@*             <div asp-validation-summary="ModelOnly" class="text-danger"></div> *@
@*             <input type="hidden" asp-for="Id" /> *@
@*             <div class="form-group"> *@
@*                 <label asp-for="Size1" class="control-label">Size</label> *@
@*                 <input asp-for="Size1" class="form-control" /> *@
@*                 <span asp-validation-for="Size1" class="text-danger"></span> *@
@*             </div> *@
@*             <div class="form-group"> *@
@*                 <a asp-action="Index" class="btn btn-light">Trở về</a> *@
@*                 <button type="submit" class="btn btn-gradient-primary me-2">Sửa</button> *@
@*             </div> *@
@*         </form> *@
@*     </div> *@
@* </div> *@

@* @section Scripts { *@
@*     @{await Html.RenderPartialAsync("_ValidationScriptsPartial");} *@
@* } *@





@model JDshop.Models.Size

@{
    ViewData["Title"] = "Chỉnh sửa kích thước";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    body {
        background-color: #f5f5f7;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    }

    .edit-page {
        padding: 2rem;
        margin: 0 auto;
    }

    .page-header {
        margin-bottom: 2rem;
    }

    .page-title {
        font-size: 1.75rem;
        font-weight: 600;
        color: #1d1d1f;
        margin: 0 0 0.5rem 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .page-subtitle {
        font-size: 0.875rem;
        color: #86868b;
        margin: 0;
    }

    .breadcrumb {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
        color: #86868b;
        margin-bottom: 1.5rem;
    }

        .breadcrumb a {
            color: #007aff;
            text-decoration: none;
        }

            .breadcrumb a:hover {
                text-decoration: underline;
            }

    .edit-container {
        display: grid;
        grid-template-columns: 1fr 300px;
        gap: 2rem;
    }

    .form-card {
        background: white;
        border-radius: 12px;
        padding: 2rem;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        height: fit-content;
    }

    .preview-card {
        background: white;
        border-radius: 12px;
        padding: 2rem;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        height: fit-content;
        position: sticky;
        top: 2rem;
    }

    .form-header {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 2rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #f3f4f6;
    }

    .form-icon {
        width: 48px;
        height: 48px;
        background: #f59e0b;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.5rem;
    }

    .form-info {
        flex: 1;
    }

    .form-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: #1d1d1f;
        margin: 0 0 0.25rem 0;
    }

    .form-description {
        font-size: 0.875rem;
        color: #86868b;
        margin: 0;
    }

    .validation-summary {
        background: #fef2f2;
        border: 1px solid #fecaca;
        border-radius: 8px;
        padding: 1rem;
        margin-bottom: 1.5rem;
        color: #dc2626;
        font-size: 0.875rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
        color: #1d1d1f;
        font-size: 0.875rem;
    }

    .form-control {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #d2d2d7;
        border-radius: 8px;
        font-size: 0.875rem;
        transition: all 0.2s;
        background-color: #fff;
    }

        .form-control:focus {
            outline: none;
            border-color: #007aff;
            box-shadow: 0 0 0 3px rgba(0, 122, 255, 0.1);
        }

        .form-control.is-invalid {
            border-color: #dc2626;
        }

    .text-danger {
        color: #dc2626;
        font-size: 0.75rem;
        margin-top: 0.25rem;
        display: block;
    }

    .size-suggestions {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));
        gap: 0.5rem;
        margin-top: 1rem;
    }

    .size-suggestion {
        padding: 0.5rem;
        border: 1px solid #e5e7eb;
        border-radius: 6px;
        text-align: center;
        cursor: pointer;
        transition: all 0.2s;
        font-weight: 500;
        background: white;
    }

        .size-suggestion:hover {
            border-color: #007aff;
            background: #f0f9ff;
            transform: translateY(-1px);
        }

        .size-suggestion.selected {
            border-color: #007aff;
            background: #007aff;
            color: white;
        }

    .help-text {
        font-size: 0.75rem;
        color: #86868b;
        margin-top: 0.25rem;
    }

    .preview-header {
        text-align: center;
        margin-bottom: 2rem;
    }

    .preview-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: #1d1d1f;
        margin: 0 0 0.5rem 0;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .preview-subtitle {
        font-size: 0.875rem;
        color: #86868b;
    }

    .size-preview {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        margin: 0 auto 1.5rem;
        border: 4px solid #e5e7eb;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        font-weight: 700;
        color: #1d1d1f;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
    }

    .size-info {
        text-align: center;
    }

    .size-name {
        font-size: 1.125rem;
        font-weight: 600;
        color: #1d1d1f;
        margin-bottom: 0.5rem;
    }

    .size-category {
        background: #f0f9ff;
        color: #0369a1;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 500;
        border: 1px solid #bae6fd;
        display: inline-block;
        margin-bottom: 1rem;
    }

    .current-vs-new {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
        margin-top: 1.5rem;
        padding-top: 1.5rem;
        border-top: 1px solid #e5e7eb;
    }

    .comparison-item {
        text-align: center;
    }

    .comparison-label {
        font-size: 0.75rem;
        color: #86868b;
        margin-bottom: 0.5rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .comparison-size {
        width: 60px;
        height: 60px;
        border-radius: 8px;
        margin: 0 auto;
        border: 2px solid #e5e7eb;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        background: white;
    }

    .action-buttons {
        display: flex;
        justify-content: flex-end;
        gap: 0.75rem;
        margin-top: 2rem;
        padding-top: 1.5rem;
        border-top: 1px solid #f3f4f6;
    }

    .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-size: 0.875rem;
        font-weight: 500;
        border: none;
        cursor: pointer;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.2s;
    }

    .btn-cancel {
        background: #f5f5f7;
        color: #1d1d1f;
        border: 1px solid #d2d2d7;
    }

        .btn-cancel:hover {
            background: #e8e8ed;
            border-color: #9ca3af;
        }

    .btn-save {
        background: #f59e0b;
        color: white;
    }

        .btn-save:hover {
            background: #d97706;
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(245, 158, 11, 0.3);
        }

    .category-tabs {
        display: flex;
        gap: 0.5rem;
        margin-bottom: 1rem;
        background: #f3f4f6;
        padding: 0.25rem;
        border-radius: 8px;
    }

    .category-tab {
        flex: 1;
        padding: 0.5rem 1rem;
        border: none;
        background: transparent;
        border-radius: 6px;
        cursor: pointer;
        font-size: 0.875rem;
        transition: all 0.2s;
    }

        .category-tab.active {
            background: white;
            color: #007aff;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }
</style>

<div class="edit-page">

    <div class="page-header">
        <div>
            <h1 class="page-title">
                <i class="fas fa-edit"></i>
                Chỉnh sửa kích thước
            </h1>
            <p class="page-subtitle">Cập nhật thông tin kích thước sản phẩm</p>
        </div>
    </div>

    <div class="edit-container">
        <!-- Form Card -->
        <div class="form-card">
            <div class="form-header">
                <div class="form-icon">
                    <i class="fas fa-edit"></i>
                </div>
                <div class="form-info">
                    <h3 class="form-title">Thông tin kích thước</h3>
                    <p class="form-description">Chỉnh sửa tên kích thước</p>
                </div>
            </div>

            <form asp-action="Edit" id="editForm">
                <div asp-validation-summary="ModelOnly" class="validation-summary"></div>
                <input type="hidden" asp-for="Id" />

                <div class="form-group">
                    <label asp-for="Size1" class="form-label">
                        <i class="fas fa-expand-arrows-alt me-1"></i>
                        Kích thước
                    </label>
                    <input asp-for="Size1" class="form-control" placeholder="Nhập kích thước..." id="sizeInput" />
                    <span asp-validation-for="Size1" class="text-danger"></span>
                    <div class="help-text">Tên kích thước sẽ hiển thị trong danh sách sản phẩm</div>
                </div>

                <div class="form-group">
                    <label class="form-label">
                        <i class="fas fa-layer-group me-1"></i>
                        Chọn loại kích thước
                    </label>
                    <div class="category-tabs">
                        <button type="button" class="category-tab active" data-category="clothing">Quần áo</button>
                        <button type="button" class="category-tab" data-category="shoes">Giày dép</button>
                        <button type="button" class="category-tab" data-category="custom">Tùy chỉnh</button>
                    </div>
                </div>

                <div class="form-group">
                    <label class="form-label">
                        <i class="fas fa-list me-1"></i>
                        Kích thước gợi ý
                    </label>
                    <div class="size-suggestions" id="sizeSuggestions">
                        <!-- Will be populated by JavaScript -->
                    </div>
                    <div class="help-text">Nhấp vào kích thước để chọn nhanh</div>
                </div>

                <div class="action-buttons">
                    <a asp-action="Index" class="btn btn-cancel">
                        <i class="fas fa-arrow-left"></i>
                        Hủy bỏ
                    </a>

                    <button type="submit" class="btn btn-save">
                        <i class="fas fa-save"></i>
                        Lưu thay đổi
                    </button>
                </div>
            </form>
        </div>

        <!-- Preview Card -->
        <div class="preview-card">
            <div class="preview-header">
                <h3 class="preview-title">
                    <i class="fas fa-eye"></i>
                    Xem trước
                </h3>
                <p class="preview-subtitle">Kích thước sau khi chỉnh sửa</p>
            </div>

            <div class="size-preview" id="sizePreview">@Model.Size1</div>

            <div class="size-info">
                <div class="size-name" id="previewName">Size @Model.Size1</div>
                <div class="size-category" id="previewCategory">@GetSizeCategory(Model.Size1)</div>
            </div>

            <div class="current-vs-new">
                <div class="comparison-item">
                    <div class="comparison-label">Kích thước hiện tại</div>
                    <div class="comparison-size">@Model.Size1</div>
                </div>
                <div class="comparison-item">
                    <div class="comparison-label">Kích thước mới</div>
                    <div class="comparison-size" id="newSizePreview">@Model.Size1</div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetSizeCategory(string size)
    {
        if (new[] { "XS", "S", "M", "L", "XL", "XXL", "XXXL" }.Contains(size.ToUpper()))
            return "Quần áo";
        if (new[] { "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45" }.Contains(size))
            return "Giày dép";
        if (size.All(char.IsDigit))
            return "Số";
        return "Tùy chỉnh";
    }
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const sizeInput = document.getElementById('sizeInput');
            const sizePreview = document.getElementById('sizePreview');
            const previewName = document.getElementById('previewName');
            const previewCategory = document.getElementById('previewCategory');
            const newSizePreview = document.getElementById('newSizePreview');
            const sizeSuggestions = document.getElementById('sizeSuggestions');
            const categoryTabs = document.querySelectorAll('.category-tab');

            const sizeCategories = {
                clothing: ['XS', 'S', 'M', 'L', 'XL', 'XXL', 'XXXL'],
                shoes: ['35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45'],
                custom: ['Free Size', 'One Size']
            };

            // Initialize with clothing sizes
            updateSizeSuggestions('clothing');

            // Category tab switching
            categoryTabs.forEach(tab => {
                tab.addEventListener('click', function() {
                    categoryTabs.forEach(t => t.classList.remove('active'));
                    this.classList.add('active');
                    updateSizeSuggestions(this.getAttribute('data-category'));
                });
            });

            // Update size suggestions based on category
            function updateSizeSuggestions(category) {
                sizeSuggestions.innerHTML = '';
                sizeCategories[category].forEach(size => {
                    const suggestion = document.createElement('div');
                    suggestion.className = 'size-suggestion';
                    suggestion.textContent = size;
                    suggestion.addEventListener('click', function() {
                        // Remove previous selection
                        document.querySelectorAll('.size-suggestion').forEach(s => s.classList.remove('selected'));
                        this.classList.add('selected');

                        // Update input and preview
                        sizeInput.value = size;
                        updatePreview(size);
                    });
                    sizeSuggestions.appendChild(suggestion);
                });
            }

            // Update preview when input changes
            sizeInput.addEventListener('input', function() {
                updatePreview(this.value);
            });

            function updatePreview(size) {
                sizePreview.textContent = size || '@Model.Size1';
                previewName.textContent = `Size ${size || '@Model.Size1'}`;
                newSizePreview.textContent = size || '@Model.Size1';
                previewCategory.textContent = getSizeCategory(size || '@Model.Size1');
            }

            function getSizeCategory(size) {
                const clothingSizes = ['XS', 'S', 'M', 'L', 'XL', 'XXL', 'XXXL'];
                const shoeSizes = ['35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45'];

                if (clothingSizes.includes(size.toUpperCase())) return 'Quần áo';
                if (shoeSizes.includes(size)) return 'Giày dép';
                if (/^\d+$/.test(size)) return 'Số';
                return 'Tùy chỉnh';
            }

            // Form validation
            document.getElementById('editForm').addEventListener('submit', function(e) {
                const sizeValue = sizeInput.value.trim();

                if (!sizeValue) {
                    alert('Vui lòng nhập kích thước.');
                    sizeInput.focus();
                    e.preventDefault();
                    return;
                }

                // Show loading state
                const submitBtn = e.target.querySelector('button[type="submit"]');
                const originalText = submitBtn.innerHTML;
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Đang lưu...';
                submitBtn.disabled = true;

                // Reset button after 3 seconds if form doesn't submit
                setTimeout(() => {
                    submitBtn.innerHTML = originalText;
                    submitBtn.disabled = false;
                }, 3000);
            });

            // Auto-focus and select input
            sizeInput.focus();
            sizeInput.select();

            // Set initial category based on current size
            const currentSize = '@Model.Size1';
            const currentCategory = getSizeCategory(currentSize);
            if (currentCategory === 'Giày dép') {
                categoryTabs.forEach(t => t.classList.remove('active'));
                document.querySelector('[data-category="shoes"]').classList.add('active');
                updateSizeSuggestions('shoes');
            } else if (currentCategory === 'Tùy chỉnh') {
                categoryTabs.forEach(t => t.classList.remove('active'));
                document.querySelector('[data-category="custom"]').classList.add('active');
                updateSizeSuggestions('custom');
            }
        });
    </script>
}
